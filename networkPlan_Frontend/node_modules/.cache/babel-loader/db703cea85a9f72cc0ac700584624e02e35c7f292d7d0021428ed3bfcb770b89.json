{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AuerDa\\\\Desktop\\\\networkPlan\\\\networkPlan_Frontend\\\\src\\\\components\\\\SearchForm.tsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass DeviceList extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      devices: [],\n      ports: [],\n      switches: [],\n      hosts: [],\n      searchQuery: \"\"\n    };\n    this.handleSearch = event => {\n      this.setState({\n        searchQuery: event.target.value\n      });\n    };\n  }\n  async componentDidMount() {\n    try {\n      const response = await fetch('http://localhost:8080/api/network/networks');\n      const data = await response.json();\n      this.setState({\n        devices: data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n    try {\n      const response = await fetch('http://localhost:8080/api/network/ports');\n      const data = await response.json();\n      console.log(data);\n      this.setState({\n        ports: data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n    try {\n      const response = await fetch('http://localhost:8080/api/network/switches');\n      const data = await response.json();\n      console.log(data);\n      this.setState({\n        switches: data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n    try {\n      const response = await fetch('http://localhost:8080/api/network/hosts');\n      const data = await response.json();\n      console.log(data);\n      this.setState({\n        hosts: data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  render() {\n    const filteredDevices = this.state.devices.filter(device => device.name.includes(this.state.searchQuery));\n    const filteredPorts = this.state.ports.filter(port => port.name.includes(this.state.searchQuery));\n    const filteredSwitches = this.state.switches.filter(zwitch => zwitch.name.includes(this.state.searchQuery));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by name\",\n        onChange: this.handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), filteredDevices.map(device => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Department: \", device.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", device.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Location: \", device.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this)]\n      }, device.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this)), filteredPorts.map(port => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Port: \", port.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Switch ID: \", port.switchId.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Port Name: \", port.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Port Mode: \", port.portMode]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this), port.host && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Host MAC ID: \", port.host.macId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Host Name: \", port.host.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Host IP: \", port.host.ip]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Host System: \", port.host.system]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" Network: \", port.host.network.name, \" (\", port.host.network.location, \") \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this), \" \"]\n        }, void 0, true), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this)), filteredSwitches.map(zwitch => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Switch: \", zwitch.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", zwitch.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default DeviceList;","map":{"version":3,"names":["React","Component","DeviceList","state","devices","ports","switches","hosts","searchQuery","handleSearch","event","setState","target","value","componentDidMount","response","fetch","data","json","error","console","log","render","filteredDevices","filter","device","name","includes","filteredPorts","port","filteredSwitches","zwitch","map","id","location","switchId","portMode","host","macId","ip","system","network"],"sources":["C:/Users/AuerDa/Desktop/networkPlan/networkPlan_Frontend/src/components/SearchForm.tsx"],"sourcesContent":["import React, {Component} from 'react';\n\ninterface DeviceListState {\n    devices: any[];\n    ports: any[];\n    switches: any[];\n    hosts: any[],\n    searchQuery: string;\n}\n\nclass DeviceList extends Component {\n    state: DeviceListState = {\n        devices: [],\n        ports: [],\n        switches: [],\n        hosts: [],\n        searchQuery: \"\"\n    };\n\n    async componentDidMount() {\n        try {\n            const response = await fetch('http://localhost:8080/api/network/networks')\n            const data = await response.json();\n            this.setState({devices: data});\n        } catch (error) {\n            console.log(error);\n        }\n        try {\n            const response = await fetch('http://localhost:8080/api/network/ports')\n            const data = await response.json();\n            console.log(data)\n            this.setState({ports: data});\n        } catch (error) {\n            console.log(error);\n        }\n        try{\n            const response = await fetch('http://localhost:8080/api/network/switches')\n            const data = await response.json();\n            console.log(data)\n            this.setState({switches: data});\n        }catch(error){\n            console.log(error)\n        }\n        try{\n            const response = await fetch('http://localhost:8080/api/network/hosts')\n            const data = await response.json();\n            console.log(data)\n            this.setState({hosts: data})\n        }catch(error){\n            console.log(error)\n        }\n    }\n\n\n    handleSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({searchQuery: event.target.value});\n    }\n\n    render() {\n        const filteredDevices = this.state.devices.filter(device =>\n            device.name.includes(this.state.searchQuery)\n        );\n        const filteredPorts = this.state.ports.filter(port =>\n            port.name.includes(this.state.searchQuery)\n        );\n        const filteredSwitches = this.state.switches.filter(zwitch =>\n            zwitch.name.includes(this.state.searchQuery)\n        );\n        return (\n            <div>\n                <input\n                    type=\"text\"\n                    placeholder=\"Search by name\"\n                    onChange={this.handleSearch}\n                />\n                {filteredDevices.map(device => (\n                    <div key={device.id}>\n                        <p>Department: {device.id}</p>\n                        <p>Name: {device.name}</p>\n                        <p>Location: {device.location}</p>\n                        <br></br>\n                    </div>\n                ))}\n                {filteredPorts.map(port => (\n                    <div>\n                        <br></br>\n                        <p>Port: {port.id}</p>\n                        <p>Switch ID: {port.switchId.name}</p>\n                        <p>Port Name: {port.name}</p>\n                        <p>Port Mode: {port.portMode}</p>\n                        {port.host && (<>\n                            <p>Host MAC ID: {port.host.macId}</p>\n                            <p>Host Name: {port.host.name}</p>\n                            <p>Host IP: {port.host.ip}</p>\n                            <p>Host System: {port.host.system}</p>\n                            <p> Network: {port.host.network.name} ({port.host.network.location}) </p> </>)} </div>\n                ))}\n                {filteredSwitches.map(zwitch => (\n                    <div>\n                        <br></br>\n                        <p>Switch: {zwitch.id}</p>\n                        <p>Name: {zwitch.name}</p>\n                    </div>\n                ))}\n            </div>\n\n        );\n    }\n}\n\nexport default DeviceList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}