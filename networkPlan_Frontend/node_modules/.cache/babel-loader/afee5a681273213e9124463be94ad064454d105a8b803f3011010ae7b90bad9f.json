{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AuerDa\\\\Desktop\\\\networkPlan\\\\networkPlan_Frontend\\\\src\\\\components\\\\DisplayIpAddresses.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport logo from './logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DisplayIps() {\n  _s();\n  const [ips, setIps] = useState([]);\n  useEffect(() => {\n    fetch('/calculator', {\n      method: 'POST',\n      body: JSON.stringify({\n        ip: '192.168.1.1',\n        mask: '255.255.255.0',\n        amount: 5\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(data => setIps(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to GEEK Fitness GmbH\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      alt: \"Logo\",\n      style: {\n        width: '250px',\n        height: '180px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"What do you want to do?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/form\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Submask Calculator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/search\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Search network information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: ips.map(ip => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: ip\n      }, ip, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_s(DisplayIps, \"ZCEoXTLuQh+8EXznsnLp57niBSY=\");\n_c = DisplayIps;\nexport default DisplayIps;\nvar _c;\n$RefreshReg$(_c, \"DisplayIps\");","map":{"version":3,"names":["React","useState","useEffect","logo","DisplayIps","ips","setIps","fetch","method","body","JSON","stringify","ip","mask","amount","headers","then","res","json","data","width","height","map"],"sources":["C:/Users/AuerDa/Desktop/networkPlan/networkPlan_Frontend/src/components/DisplayIpAddresses.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { IState as Props } from \"../App\";\nimport List from \"./IpList\";\nimport logo from './logo.png';\n\ninterface IProps {\n    setAddresses: React.Dispatch<React.SetStateAction<Props[\"addresses\"]>>\n    addresses: Props[\"addresses\"]\n}\n\nfunction DisplayIps() {\n    const [ips, setIps] = useState([]);\n\n    useEffect(() => {\n        fetch('/calculator', {\n            method: 'POST',\n            body: JSON.stringify({ ip: '192.168.1.1', mask: '255.255.255.0', amount: 5 }),\n            headers: { 'Content-Type': 'application/json' },\n        })\n            .then((res) => res.json())\n            .then((data) => setIps(data));\n    }, []);\n\n    return (\n        <div className=\"App\">\n            <h1>Welcome to GEEK Fitness GmbH</h1>\n            <img src={logo} alt=\"Logo\" style={{width: '250px', height: '180px'}}/>\n            <p>What do you want to do?</p>\n            <div className=\"buttons\">\n            <a href=\"/form\">\n                <button>Submask Calculator</button>\n            </a>\n            <a href=\"/search\">\n                <button>Search network information</button>\n            </a>\n            </div>\n            <ul>\n                {ips.map((ip) => (\n                    <li key={ip}>{ip}</li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default DisplayIps;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAGlD,OAAOC,IAAI,MAAM,YAAY;AAAC;AAO9B,SAASC,UAAU,GAAG;EAAA;EAClB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAElCC,SAAS,CAAC,MAAM;IACZK,KAAK,CAAC,aAAa,EAAE;MACjBC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,EAAE,EAAE,aAAa;QAAEC,IAAI,EAAE,eAAe;QAAEC,MAAM,EAAE;MAAE,CAAC,CAAC;MAC7EC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAClD,CAAC,CAAC,CACGC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKb,MAAM,CAACa,IAAI,CAAC,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI;IAAK,SAAS,EAAC,KAAK;IAAA,wBAChB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAqC,eACrC;MAAK,GAAG,EAAEhB,IAAK;MAAC,GAAG,EAAC,MAAM;MAAC,KAAK,EAAE;QAACiB,KAAK,EAAE,OAAO;QAAEC,MAAM,EAAE;MAAO;IAAE;MAAA;MAAA;MAAA;IAAA,QAAE,eACtE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA8B,eAC9B;MAAK,SAAS,EAAC,SAAS;MAAA,wBACxB;QAAG,IAAI,EAAC,OAAO;QAAA,uBACX;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAmC;QAAA;QAAA;QAAA;MAAA,QACnC,eACJ;QAAG,IAAI,EAAC,SAAS;QAAA,uBACb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAA2C;QAAA;QAAA;QAAA;MAAA,QAC3C;IAAA;MAAA;MAAA;MAAA;IAAA,QACE,eACN;MAAA,UACKhB,GAAG,CAACiB,GAAG,CAAEV,EAAE,iBACR;QAAA,UAAcA;MAAE,GAAPA,EAAE;QAAA;QAAA;QAAA;MAAA,QACd;IAAC;MAAA;MAAA;MAAA;IAAA,QACD;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEd;AAAC,GAjCQR,UAAU;AAAA,KAAVA,UAAU;AAmCnB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}