{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AuerDa\\\\Desktop\\\\networkPlan\\\\networkPlan_Frontend\\\\src\\\\components\\\\SearchForm.tsx\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass DeviceList extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      devices: [],\n      ports: [],\n      switches: [],\n      hosts: [],\n      searchQuery: \"\",\n      filteredData: [],\n      filterBy: \"vlan\",\n      selectedEndpoint: \"\"\n    };\n    this.handleChange = event => {\n      this.setState({\n        searchQuery: event.target.value\n      });\n    };\n    this.handleFilterChange = event => {\n      this.setState({\n        filterBy: event.target.value\n      });\n    };\n  }\n  async componentDidMount() {\n    const endpoints = {\n      networks: \"http://localhost:8080/api/network/networks\",\n      ports: \"http://localhost:8080/api/network/ports\",\n      switches: \"http://localhost:8080/api/network/switches\"\n    };\n    if (this.state.selectedEndpoint && endpoints[this.state.selectedEndpoint]) {\n      try {\n        const response = await fetch(endpoints[this.state.selectedEndpoint]);\n        const data = await response.json();\n        this.setState({\n          [this.state.selectedEndpoint]: data\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n  async filterData() {\n    try {\n      let url;\n      if (this.state.filterBy === 'vlan') {\n        url = `http://localhost:8080/api/network/hosts-by-vlan?vlan=${this.state.searchQuery}`;\n      } else {\n        url = `http://localhost:8080/api/network/hosts-by-switch?switchId=${this.state.searchQuery}`;\n      }\n      const response = await fetch(url);\n      const data = await response.json();\n      this.setState({\n        filteredData: data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  async updateData(endpoint) {\n    if (endpoint && endpoints[endpoint]) {\n      try {\n        const response = await fetch(endpoints[endpoint]);\n        const data = await response.json();\n        this.setState({\n          [endpoint]: data\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: this.state.searchQuery,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: this.state.filterBy,\n        onChange: this.handleFilterChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"vlan\",\n          children: \"VLAN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"switch\",\n          children: \"Switch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.filterData(),\n        children: \"Filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.updateData(\"networks\"),\n        children: \"Update Network Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.updateData(\"ports\"),\n        children: \"Update Port Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.updateData(\"switches\"),\n        children: \"Update Switch Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default DeviceList;","map":{"version":3,"names":["React","Component","DeviceList","state","devices","ports","switches","hosts","searchQuery","filteredData","filterBy","selectedEndpoint","handleChange","event","setState","target","value","handleFilterChange","componentDidMount","endpoints","networks","response","fetch","data","json","error","console","log","filterData","url","updateData","endpoint","render"],"sources":["C:/Users/AuerDa/Desktop/networkPlan/networkPlan_Frontend/src/components/SearchForm.tsx"],"sourcesContent":["import React, { ChangeEvent, Component } from \"react\";\r\n\r\ninterface DeviceListState {\r\n    devices: any[];\r\n    ports: any[];\r\n    switches: any[];\r\n    hosts: any[];\r\n    searchQuery: string;\r\n    filteredData: any[];\r\n    filterBy: string;\r\n    selectedEndpoint: string;\r\n}\r\n\r\nclass DeviceList extends Component {\r\n    state: DeviceListState = {\r\n        devices: [],\r\n        ports: [],\r\n        switches: [],\r\n        hosts: [],\r\n        searchQuery: \"\",\r\n        filteredData: [],\r\n        filterBy: \"vlan\",\r\n        selectedEndpoint: \"\",\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const endpoints = {\r\n            networks: \"http://localhost:8080/api/network/networks\",\r\n            ports: \"http://localhost:8080/api/network/ports\",\r\n            switches: \"http://localhost:8080/api/network/switches\"\r\n        };\r\n        if (this.state.selectedEndpoint && endpoints[this.state.selectedEndpoint]) {\r\n            try {\r\n                const response = await fetch(endpoints[this.state.selectedEndpoint]);\r\n                const data = await response.json();\r\n                this.setState({ [this.state.selectedEndpoint]: data });\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n        this.setState({ searchQuery: event.target.value });\r\n    };\r\n\r\n    handleFilterChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({ filterBy: event.target.value });\r\n    };\r\n\r\n    async filterData() {\r\n        try {\r\n            let url;\r\n            if (this.state.filterBy === 'vlan') {\r\n                url = `http://localhost:8080/api/network/hosts-by-vlan?vlan=${this.state.searchQuery}`\r\n            } else {\r\n                url = `http://localhost:8080/api/network/hosts-by-switch?switchId=${this.state.searchQuery}`\r\n            }\r\n            const response = await fetch(url);\r\n            const data = await response.json();\r\n            this.setState({ filteredData: data });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async updateData(endpoint: string) {\r\n        if (endpoint && endpoints[endpoint]) {\r\n            try {\r\n                const response = await fetch(endpoints[endpoint]);\r\n                const data = await response.json();\r\n                this.setState({ [endpoint]: data });\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* render your list of devices, ports, switches, and hosts */}\r\n                <input value={this.state.searchQuery} onChange={this.handleChange} />\r\n                <select value={this.state.filterBy} onChange={this\r\n                    .handleFilterChange}>\r\n<option value=\"vlan\">VLAN</option>\r\n<option value=\"switch\">Switch</option>\r\n</select>\r\n<button onClick={() => this.filterData()}>Filter</button>\r\n<button onClick={() => this.updateData(\"networks\")}>Update Network Data</button>\r\n<button onClick={() => this.updateData(\"ports\")}>Update Port Data</button>\r\n<button onClick={() => this.updateData(\"switches\")}>Update Switch Data</button>\r\n</div>\r\n);\r\n}\r\n}\r\n\r\nexport default DeviceList;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAiBC,SAAS,QAAQ,OAAO;AAAC;AAatD,MAAMC,UAAU,SAASD,SAAS,CAAC;EAAA;IAAA;IAAA,KAC/BE,KAAK,GAAoB;MACrBC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,EAAE;MACfC,YAAY,EAAE,EAAE;MAChBC,QAAQ,EAAE,MAAM;MAChBC,gBAAgB,EAAE;IACtB,CAAC;IAAA,KAmBDC,YAAY,GAAIC,KAA2C,IAAK;MAC5D,IAAI,CAACC,QAAQ,CAAC;QAAEN,WAAW,EAAEK,KAAK,CAACE,MAAM,CAACC;MAAM,CAAC,CAAC;IACtD,CAAC;IAAA,KAEDC,kBAAkB,GAAIJ,KAA0C,IAAK;MACjE,IAAI,CAACC,QAAQ,CAAC;QAAEJ,QAAQ,EAAEG,KAAK,CAACE,MAAM,CAACC;MAAM,CAAC,CAAC;IACnD,CAAC;EAAA;EAvBD,MAAME,iBAAiB,GAAG;IACtB,MAAMC,SAAS,GAAG;MACdC,QAAQ,EAAE,4CAA4C;MACtDf,KAAK,EAAE,yCAAyC;MAChDC,QAAQ,EAAE;IACd,CAAC;IACD,IAAI,IAAI,CAACH,KAAK,CAACQ,gBAAgB,IAAIQ,SAAS,CAAC,IAAI,CAAChB,KAAK,CAACQ,gBAAgB,CAAC,EAAE;MACvE,IAAI;QACA,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAACH,SAAS,CAAC,IAAI,CAAChB,KAAK,CAACQ,gBAAgB,CAAC,CAAC;QACpE,MAAMY,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;QAClC,IAAI,CAACV,QAAQ,CAAC;UAAE,CAAC,IAAI,CAACX,KAAK,CAACQ,gBAAgB,GAAGY;QAAK,CAAC,CAAC;MAC1D,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACtB;IACJ;EACJ;EAUA,MAAMG,UAAU,GAAG;IACf,IAAI;MACA,IAAIC,GAAG;MACP,IAAI,IAAI,CAAC1B,KAAK,CAACO,QAAQ,KAAK,MAAM,EAAE;QAChCmB,GAAG,GAAI,wDAAuD,IAAI,CAAC1B,KAAK,CAACK,WAAY,EAAC;MAC1F,CAAC,MAAM;QACHqB,GAAG,GAAI,8DAA6D,IAAI,CAAC1B,KAAK,CAACK,WAAY,EAAC;MAChG;MACA,MAAMa,QAAQ,GAAG,MAAMC,KAAK,CAACO,GAAG,CAAC;MACjC,MAAMN,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;MAClC,IAAI,CAACV,QAAQ,CAAC;QAAEL,YAAY,EAAEc;MAAK,CAAC,CAAC;IACzC,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB;EACJ;EAEA,MAAMK,UAAU,CAACC,QAAgB,EAAE;IAC/B,IAAIA,QAAQ,IAAIZ,SAAS,CAACY,QAAQ,CAAC,EAAE;MACjC,IAAI;QACA,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAACH,SAAS,CAACY,QAAQ,CAAC,CAAC;QACjD,MAAMR,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;QAClC,IAAI,CAACV,QAAQ,CAAC;UAAE,CAACiB,QAAQ,GAAGR;QAAK,CAAC,CAAC;MACvC,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACtB;IACJ;EACJ;EAEAO,MAAM,GAAG;IACL,oBACI;MAAA,wBAEI;QAAO,KAAK,EAAE,IAAI,CAAC7B,KAAK,CAACK,WAAY;QAAC,QAAQ,EAAE,IAAI,CAACI;MAAa;QAAA;QAAA;QAAA;MAAA,QAAG,eACrE;QAAQ,KAAK,EAAE,IAAI,CAACT,KAAK,CAACO,QAAS;QAAC,QAAQ,EAAE,IAAI,CAC7CO,kBAAmB;QAAA,wBACxC;UAAQ,KAAK,EAAC,MAAM;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAc,eAClC;UAAQ,KAAK,EAAC,QAAQ;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAgB;MAAA;QAAA;QAAA;QAAA;MAAA,QAC7B,eACT;QAAQ,OAAO,EAAE,MAAM,IAAI,CAACW,UAAU,EAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgB,eACzD;QAAQ,OAAO,EAAE,MAAM,IAAI,CAACE,UAAU,CAAC,UAAU,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA6B,eAChF;QAAQ,OAAO,EAAE,MAAM,IAAI,CAACA,UAAU,CAAC,OAAO,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA0B,eAC1E;QAAQ,OAAO,EAAE,MAAM,IAAI,CAACA,UAAU,CAAC,UAAU,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA4B;IAAA;MAAA;MAAA;MAAA;IAAA,QACzE;EAEN;AACA;AAEA,eAAe5B,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}