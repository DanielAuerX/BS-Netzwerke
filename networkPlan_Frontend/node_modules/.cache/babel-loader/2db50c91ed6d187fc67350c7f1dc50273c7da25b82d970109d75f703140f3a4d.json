{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AuerDa\\\\Desktop\\\\networkPlan\\\\networkPlan_Frontend\\\\src\\\\components\\\\SearchForm.tsx\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass DeviceList extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      devices: [],\n      ports: [],\n      switches: [],\n      hosts: [],\n      searchQuery: \"\",\n      filteredData: [],\n      filterBy: \"vlan\",\n      selectedEndpoint: \"\"\n    };\n    this.filterDataByVlan = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8080/api/network/hosts-by-vlan?vlan=\" + this.state.searchQuery);\n        console.log(this.state.searchQuery);\n        const data = await response.json();\n        this.setState({\n          filteredData: data\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    this.filterDataBySwitchId = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8080/api/network/hosts-by-switch?switchId=\" + this.state.searchQuery);\n        console.log(this.state.searchQuery);\n        const data = await response.json();\n        this.setState({\n          filteredData: data\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    this.handleChange = event => {\n      this.setState({\n        searchQuery: event.target.value\n      });\n    };\n    this.handleFilterChange = event => {\n      this.setState({\n        filterBy: event.target.value\n      });\n    };\n  }\n  async componentDidMount() {\n    if (this.state.selectedEndpoint === 'networks') {\n      try {\n        const response = await fetch(\"http://localhost:8080/api/network/networks\");\n        const data = await response.json();\n        this.setState({\n          devices: data\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    if (this.state.selectedEndpoint === 'ports') {\n      try {\n        const response = await fetch(\"http://localhost:8080/api/network/ports\");\n        const data = await response.json();\n        console.log(data);\n        this.setState({\n          ports: data\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    if (this.state.selectedEndpoint === 'switches') {\n      try {\n        const response = await fetch(\"http://localhost:8080/api/network/switches\");\n        const data = await response.json();\n        console.log(data);\n        this.setState({\n          switches: data\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n  async filterData() {\n    try {\n      let response;\n      if (this.state.filterBy === 'vlan') {\n        response = await fetch(`http://localhost:8080/api/network/hosts-by-vlan?vlan=${this.state.searchQuery}`);\n      } else {\n        response = await fetch(`http://localhost:8080/api/network/hosts-by-switch?switchId=${this.state.searchQuery}`);\n      }\n      const data = await response.json();\n      this.setState({\n        filteredData: data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  async updateNetworkData() {\n    try {\n      const response = await fetch(\"http://localhost:8080/api/network/networks\");\n      const data = await response.json();\n      this.setState({\n        devices: data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  async updatePortData() {\n    try {\n      const response = await fetch(\"http://localhost:8080/api/network/ports\");\n      const data = await response.json();\n      this.setState({\n        ports: data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  async updateSwitchData() {\n    try {\n      const response = await fetch(\"http://localhost:8080/api/network/switches\");\n      const data = await response.json();\n      console.log(data);\n      this.setState({\n        switches: data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  render() {\n    const filteredDevices = this.state.devices.filter(device => device.name.includes(this.state.searchQuery));\n    const filteredPorts = this.state.ports.filter(port => port.vlan.includes(this.state.searchQuery));\n    const filteredSwitches = this.state.switches.filter(zwitch => zwitch.name.includes(this.state.searchQuery));\n    const filteredHosts = this.state.hosts.filter(host => host.vlan.includes(this.state.searchQuery));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"fancy-h1\",\n        children: \"Select a search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: this.handleChange,\n        className: \"fancy-button\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select an option\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"VLAN30\",\n          children: \"VLAN 30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"VLAN20\",\n          children: \"VLAN 20\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1\",\n          children: \"Switch 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"switch2\",\n          children: \"Switch 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        //onClick={}\n        onClick: () => this.filterDataByVlan(),\n        className: \"fancy-button\",\n        children: \"Filter by VLAN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.filterDataBySwitchId(),\n        className: \"fancy-button\",\n        children: \"Filter by Switch ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), this.state.filteredData.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", data.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"VLAN: \", this.state.searchQuery]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 25\n        }, this)]\n      }, data.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.updateNetworkData(),\n        className: \"fancy-button\",\n        children: \"Update Network Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this), this.state.devices.map(devices => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: devices.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 28\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.updatePortData(),\n        className: \"fancy-button\",\n        children: \"Update Port Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), this.state.ports.map(port => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: port.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 28\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.updateSwitchData(),\n        className: \"fancy-button\",\n        children: \"Update Switch Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this), this.state.switches.map(switches => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: switches.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 28\n        }, this);\n      }), filteredDevices.map(device => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Department: \", device.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", device.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Location: \", device.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 25\n        }, this)]\n      }, device.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 21\n      }, this)), filteredPorts.map(port => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Port: \", port.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Switch ID: \", port.switchId.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Port Name: \", port.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Port VLAN: \", port.vlan]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Port Mode: \", port.portMode]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 25\n        }, this), port.host && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Host MAC ID: \", port.host.macId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Host Name: \", port.host.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Host IP: \", port.host.ip]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Host System: \", port.host.system]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Department:\", \" \", port.host.department.name, \" (\", port.host.department.location, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }, this)), filteredSwitches.map(zwitch => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Switch: \", zwitch.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Switch ID: \", zwitch.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Location: \", zwitch.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 25\n        }, this)]\n      }, zwitch.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 21\n      }, this)), filteredHosts.map(host => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Host: \", host.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"MAC ID: \", host.macId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"IP: \", host.ip]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"System: \", host.system]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Department: \", host.department.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 25\n        }, this)]\n      }, host.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default DeviceList;","map":{"version":3,"names":["React","Component","DeviceList","state","devices","ports","switches","hosts","searchQuery","filteredData","filterBy","selectedEndpoint","filterDataByVlan","response","fetch","console","log","data","json","setState","error","filterDataBySwitchId","handleChange","event","target","value","handleFilterChange","componentDidMount","filterData","updateNetworkData","updatePortData","updateSwitchData","render","filteredDevices","filter","device","name","includes","filteredPorts","port","vlan","filteredSwitches","zwitch","filteredHosts","host","map","id","location","switchId","portMode","macId","ip","system","department"],"sources":["C:/Users/AuerDa/Desktop/networkPlan/networkPlan_Frontend/src/components/SearchForm.tsx"],"sourcesContent":["import React, {ChangeEvent, Component} from \"react\";\r\n\r\ninterface DeviceListState {\r\n    devices: any[];\r\n    ports: any[];\r\n    switches: any[];\r\n    hosts: any[];\r\n    searchQuery: string;\r\n    filteredData: any[];\r\n    filterBy: string;\r\n    selectedEndpoint: string;\r\n}\r\n\r\nclass DeviceList extends Component {\r\n    state: DeviceListState = {\r\n        devices: [],\r\n        ports: [],\r\n        switches: [],\r\n        hosts: [],\r\n        searchQuery: \"\",\r\n        filteredData: [],\r\n        filterBy: \"vlan\",\r\n        selectedEndpoint: \"\",\r\n    };\r\n\r\n    async componentDidMount() {\r\n        if (this.state.selectedEndpoint === 'networks') {\r\n            try {\r\n                const response = await fetch(\"http://localhost:8080/api/network/networks\");\r\n                const data = await response.json();\r\n                this.setState({ devices: data });\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        if (this.state.selectedEndpoint === 'ports') {\r\n            try {\r\n                const response = await fetch(\"http://localhost:8080/api/network/ports\");\r\n                const data = await response.json();\r\n                console.log(data);\r\n                this.setState({ ports: data });\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        if (this.state.selectedEndpoint === 'switches') {\r\n            try {\r\n                const response = await fetch(\"http://localhost:8080/api/network/switches\");\r\n                const data = await response.json();\r\n                console.log(data);\r\n                this.setState({ switches: data });\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    filterDataByVlan = async () => {\r\n        try {\r\n            const response = await fetch(\r\n                \"http://localhost:8080/api/network/hosts-by-vlan?vlan=\" + this.state.searchQuery\r\n            );\r\n            console.log(this.state.searchQuery)\r\n            const data = await response.json();\r\n            this.setState({ filteredData: data });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    filterDataBySwitchId = async () => {\r\n        try {\r\n            const response = await fetch(\r\n                \"http://localhost:8080/api/network/hosts-by-switch?switchId=\" + this.state.searchQuery\r\n            );\r\n            console.log(this.state.searchQuery)\r\n            const data = await response.json();\r\n            this.setState({ filteredData: data });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n        this.setState({searchQuery: event.target.value});\r\n    }\r\n\r\n    handleFilterChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({filterBy: event.target.value});\r\n    }\r\n\r\n    async filterData() {\r\n        try {\r\n            let response;\r\n            if (this.state.filterBy === 'vlan') {\r\n                response = await fetch(\r\n                    `http://localhost:8080/api/network/hosts-by-vlan?vlan=${this.state.searchQuery}`\r\n                );\r\n            } else {\r\n                response = await fetch(\r\n                    `http://localhost:8080/api/network/hosts-by-switch?switchId=${this.state.searchQuery}`\r\n                );\r\n            }\r\n            const data = await response.json();\r\n            this.setState({ filteredData: data });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async updateNetworkData() {\r\n        try {\r\n            const response = await fetch(\"http://localhost:8080/api/network/networks\");\r\n            const data = await response.json();\r\n            this.setState({ devices: data });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async updatePortData() {\r\n        try {\r\n            const response = await fetch(\"http://localhost:8080/api/network/ports\");\r\n            const data = await response.json();\r\n            this.setState({ ports: data });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async updateSwitchData() {\r\n        try {\r\n            const response = await fetch(\"http://localhost:8080/api/network/switches\");\r\n            const data = await response.json();\r\n            console.log(data);\r\n            this.setState({ switches: data });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const filteredDevices = this.state.devices.filter((device) =>\r\n            device.name.includes(this.state.searchQuery)\r\n        );\r\n        const filteredPorts = this.state.ports.filter((port) =>\r\n            port.vlan.includes(this.state.searchQuery)\r\n        );\r\n        const filteredSwitches = this.state.switches.filter((zwitch) =>\r\n            zwitch.name.includes(this.state.searchQuery)\r\n        );\r\n        const filteredHosts = this.state.hosts.filter((host) =>\r\n            host.vlan.includes(this.state.searchQuery)\r\n        );\r\n        return (\r\n            <div className=\"App\">\r\n                <h1 className=\"fancy-h1\">Select a search</h1>\r\n                <select\r\n                    onChange={this.handleChange}\r\n                    className=\"fancy-button\">\r\n                    <option value=\"\">Select an option</option>\r\n                    <option value=\"VLAN30\">VLAN 30</option>\r\n                    <option value=\"VLAN20\">VLAN 20</option>\r\n                    <option value=\"1\">Switch 1</option>\r\n                    <option value=\"switch2\">Switch 2</option>\r\n                </select>\r\n                <button\r\n                    //onClick={}\r\n                    onClick={() => this.filterDataByVlan()}\r\n                    className=\"fancy-button\"\r\n                >Filter by VLAN</button>\r\n                <button\r\n                    onClick={() => this.filterDataBySwitchId()}\r\n                    className=\"fancy-button\"\r\n                >Filter by Switch ID</button>\r\n                {this.state.filteredData.map((data) => (\r\n                    <div key={data.id}>\r\n                        <p>Name: {data.name}</p>\r\n                        <p>VLAN: {this.state.searchQuery}</p>\r\n                        <br />\r\n                    </div>\r\n                ))}\r\n                <button\r\n                    onClick={() => this.updateNetworkData()}\r\n                    className=\"fancy-button\"\r\n                >Update Network Data</button>\r\n                {this.state.devices.map((devices) => {\r\n                    return <div>{devices.name}</div>;\r\n                })}\r\n                <button\r\n                    onClick={() => this.updatePortData()}\r\n                    className=\"fancy-button\"\r\n                >Update Port Data</button>\r\n                {this.state.ports.map((port) => {\r\n                    return <div>{port.name}</div>;\r\n                })}\r\n                <button\r\n                    onClick={() => this.updateSwitchData()}\r\n                    className=\"fancy-button\"\r\n                >Update Switch Data</button>\r\n                {this.state.switches.map((switches) => {\r\n                    return <div>{switches.name}</div>;\r\n                })}\r\n                {filteredDevices.map((device) => (\r\n                    <div key={device.id}>\r\n                        <p>Department: {device.id}</p>\r\n                        <p>Name: {device.name}</p>\r\n                        <p>Location: {device.location}</p>\r\n                        <br />\r\n                    </div>\r\n                ))}\r\n                {filteredPorts.map((port) => (\r\n                    <div>\r\n                        <br />\r\n                        <p>Port: {port.id}</p>\r\n                        <p>Switch ID: {port.switchId.name}</p>\r\n                        <p>Port Name: {port.name}</p>\r\n                        <p>Port VLAN: {port.vlan}</p>\r\n                        <p>Port Mode: {port.portMode}</p>\r\n                        {port.host && (\r\n                            <>\r\n                                <p>Host MAC ID: {port.host.macId}</p>\r\n                                <p>Host Name: {port.host.name}</p>\r\n                                <p>Host IP: {port.host.ip}</p>\r\n                                <p>Host System: {port.host.system}</p>\r\n                                <p>\r\n                                    Department:{\" \"}\r\n                                    {port.host.department.name} (\r\n                                    {port.host.department.location})\r\n                                </p>\r\n                            </>\r\n                        )}\r\n                        <br />\r\n                    </div>\r\n                ))}\r\n                {filteredSwitches.map((zwitch) => (\r\n                    <div key={zwitch.id}>\r\n                        <p>Switch: {zwitch.name}</p>\r\n                        <p>Switch ID: {zwitch.id}</p>\r\n                        <p>Location: {zwitch.location}</p>\r\n                        <br />\r\n                    </div>\r\n                ))}\r\n                {filteredHosts.map((host) => (\r\n                    <div key={host.id}>\r\n                        <p>Host: {host.name}</p>\r\n                        <p>MAC ID: {host.macId}</p>\r\n                        <p>IP: {host.ip}</p>\r\n                        <p>System: {host.system}</p>\r\n                        <p>Department: {host.department.name}</p>\r\n                        <br />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DeviceList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}