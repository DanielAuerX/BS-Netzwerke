{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AuerDa\\\\Desktop\\\\networkPlan\\\\networkPlan_Frontend\\\\src\\\\components\\\\SubmitForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [ip, setIp] = useState('');\n  const [mask, setMask] = useState('');\n  const [amount, setAmount] = useState('');\n  const [ips, setIps] = useState([]);\n  const [error, setError] = useState('');\n  const resetIps = () => {\n    setIps([]);\n  };\n  async function handleSubmit() {\n    // @ts-ignore\n    // eslint-disable-next-line no-restricted-globals\n    event.preventDefault();\n    // @ts-ignore\n    if (amount < 3) {\n      setError('Please enter at least three');\n      return;\n    }\n    setError('');\n    const response = await fetch('http://localhost:8080/api/calculator', {\n      method: 'POST',\n      body: JSON.stringify({\n        ip,\n        mask,\n        amount\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(data => setIps(data));\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"IP:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: ip,\n          onChange: e => setIp(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Mask:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: mask,\n          onChange: e => setMask(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Amount:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: amount,\n          onChange: e => setAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetIps,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"IP Addresses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), ips.map((ip, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [index === 0 ? \"Network IP: \" : index === ips.length - 1 ? \"Broadcast IP: \" : \"Possible IP: \", ip]\n    }, ip, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"TOd7PaodHAJ2qBdJrGCMOjDTkpo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","ip","setIp","mask","setMask","amount","setAmount","ips","setIps","error","setError","resetIps","handleSubmit","event","preventDefault","response","fetch","method","body","JSON","stringify","headers","then","res","json","data","e","target","value","color","map","index","length"],"sources":["C:/Users/AuerDa/Desktop/networkPlan/networkPlan_Frontend/src/components/SubmitForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n    const [ip, setIp] = useState('');\n    const [mask, setMask] = useState('');\n    const [amount, setAmount] = useState('');\n    const [ips, setIps] = useState([]);\n    const [error, setError] = useState('');\n    const resetIps = () => {\n        setIps([]);\n    }\n\n    async function handleSubmit(){\n        // @ts-ignore\n        // eslint-disable-next-line no-restricted-globals\n        event.preventDefault();\n        // @ts-ignore\n        if (amount < 3) {\n            setError('Please enter at least three');\n            return;\n        }\n        setError('');\n        const response = await fetch('http://localhost:8080/api/calculator', {\n            method: 'POST',\n            body: JSON.stringify({ ip, mask, amount }),\n            headers: { 'Content-Type': 'application/json' },\n        })\n            .then((res) => res.json())\n            .then((data) => setIps(data));\n    };\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <label>\n                    IP:\n                    <input\n                        type=\"text\"\n                        value={ip}\n                        onChange={(e) => setIp(e.target.value)}\n                    />\n                </label>\n                <br />\n                <label>\n                    Mask:\n                    <input\n                        type=\"text\"\n                        value={mask}\n                        onChange={(e) => setMask(e.target.value)}\n                    />\n                </label>\n                <br />\n                <label>\n                    Amount:\n                    <input\n                        type=\"text\"\n                        value={amount}\n                        onChange={(e) => setAmount(e.target.value)}\n                    />\n                </label>\n                <br />\n                <button type=\"submit\">Submit</button>\n            </form>\n            {error && <div style={{color: \"red\"}}>{error}</div>}\n\n            <div>\n                <button onClick={resetIps}>Reset</button>\n            </div>\n\n            <h1>IP Addresses</h1>\n            {ips.map((ip, index) => (\n                <li key={ip}>\n                    {index === 0 ? \"Network IP: \" : index === ips.length - 1 ? \"Broadcast IP: \" : \"Possible IP: \"}\n                    {ip}\n                </li>\n            ))}\n        </div>\n\n    );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}