{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AuerDa\\\\Desktop\\\\networkPlan\\\\networkPlan_Frontend\\\\src\\\\components\\\\SearchForm.tsx\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass DeviceList extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      devices: [],\n      ports: [],\n      switches: [],\n      hosts: [],\n      searchQuery: \"\",\n      filteredData: [],\n      filterBy: \"vlan\",\n      selectedEndpoint: \"\",\n      showVlanMenu: false\n    };\n    this.filterDataByVlan = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8080/api/network/hosts-by-vlan?vlan=\" + this.state.searchQuery);\n        console.log(this.state.searchQuery);\n        const data = await response.json();\n        this.setState({\n          devices: [],\n          ports: [],\n          switches: [],\n          hosts: [],\n          filteredData: []\n        });\n        this.setState({\n          filteredData: data\n        });\n        console.log(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    this.filterDataBySwitchId = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8080/api/network/hosts-by-switch?switchId=\" + this.state.searchQuery);\n        console.log(this.state.searchQuery);\n        const data = await response.json();\n        this.setState({\n          devices: [],\n          ports: [],\n          switches: [],\n          hosts: [],\n          filteredData: []\n        });\n        this.setState({\n          filteredData: data\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    this.handleVlanMenuButtonClick = () => {\n      this.setState({\n        showVlanMenu: !this.state.showVlanMenu\n      });\n    };\n    this.handleChange = e => {\n      if (e.target.value === \"allPorts\") {\n        this.updatePortData();\n      }\n      if (e.target.value === \"allSwitches\") {\n        this.updateSwitchData();\n      }\n      if (e.target.value === \"allDepartments\") {\n        this.updateNetworkData();\n      }\n      if (e.target.value === \"allHosts\") {\n        this.updateHostData();\n      }\n      if (e.target.value === \"hostsByVlan\") {}\n      if (e.target.value === \"hostBySwitch\") {}\n    };\n  }\n  async componentDidMount() {\n    if (this.state.selectedEndpoint === 'networks') {\n      try {\n        const response = await fetch(\"http://localhost:8080/api/network/networks\");\n        const data = await response.json();\n        this.setState({\n          devices: [],\n          ports: [],\n          switches: [],\n          hosts: [],\n          filteredData: []\n        });\n        this.setState({\n          devices: data\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    if (this.state.selectedEndpoint === 'ports') {\n      try {\n        const response = await fetch(\"http://localhost:8080/api/network/ports\");\n        const data = await response.json();\n        console.log(data);\n        this.setState({\n          devices: [],\n          ports: [],\n          switches: [],\n          hosts: [],\n          filteredData: []\n        });\n        this.setState({\n          ports: data\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    if (this.state.selectedEndpoint === 'switches') {\n      try {\n        const response = await fetch(\"http://localhost:8080/api/network/switches\");\n        const data = await response.json();\n        console.log(data);\n        this.setState({\n          devices: [],\n          ports: [],\n          switches: [],\n          hosts: [],\n          filteredData: []\n        }); //y data still there??\n        this.setState({\n          switches: data\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n  async updateNetworkData() {\n    try {\n      const response = await fetch(\"http://localhost:8080/api/network/networks\");\n      const data = await response.json();\n      this.setState({\n        devices: data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  async updatePortData() {\n    try {\n      const response = await fetch(\"http://localhost:8080/api/network/ports\");\n      const data = await response.json();\n      this.setState({\n        ports: data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  async updateSwitchData() {\n    try {\n      const response = await fetch(\"http://localhost:8080/api/network/switches\");\n      const data = await response.json();\n      console.log(data);\n      this.setState({\n        switches: data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  async updateHostData() {\n    try {\n      const response = await fetch(\"http://localhost:8080/api/network/hosts\");\n      const data = await response.json();\n      console.log(data);\n      this.setState({\n        hosts: data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  render() {\n    const filteredDevices = this.state.devices.filter(device => device.name.includes(this.state.searchQuery));\n    const filteredPorts = this.state.ports.filter(port => port.vlan.includes(this.state.searchQuery));\n    const filteredSwitches = this.state.switches.filter(zwitch => zwitch.name.includes(this.state.searchQuery));\n    const filteredHosts = this.state.hosts.filter(host => host.name.includes(this.state.searchQuery));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"fancy-h1\",\n        children: \"Select a search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: this.handleChange,\n        className: \"fancy-button\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"allPorts\",\n          children: \"Find all ports\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"allSwitches\",\n          children: \"Find all switches\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"allDepartments\",\n          children: \"Find all departments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"allHosts\",\n          children: \"Find all hosts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"hostsByVlan\",\n          children: \"Find hosts by VLAN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"hostBySwitch\",\n          children: \"Find hosts by switch ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.filterDataByVlan(),\n        className: \"fancy-button\",\n        children: \"Filter by VLAN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.filterDataBySwitchId(),\n        className: \"fancy-button\",\n        children: \"Filter by Switch ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.updateNetworkData(),\n        className: \"fancy-button\",\n        children: \"Update Department Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.updatePortData(),\n        className: \"fancy-button\",\n        children: \"Update Port Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.updateSwitchData(),\n        className: \"fancy-button\",\n        children: \"Update Switch Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.updateHostData(),\n        className: \"fancy-button\",\n        children: \"Update Host Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), this.state.filteredData.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"Host: \", data.macId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", data.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"IP: \", data.ip]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.searchQuery\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }, this)]\n      }, data.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 21\n      }, this)), filteredDevices.map(device => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"Department: \", device.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", device.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Location: \", device.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 25\n        }, this)]\n      }, device.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 21\n      }, this)), filteredPorts.map(port => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"Port: \", port.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Switch ID: \", port.switchId.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"VLAN: \", port.vlan]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Mode: \", port.portMode]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 25\n        }, this), port.host && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Host: \", port.host.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 33\n          }, this)\n        }, void 0, false), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 21\n      }, this)), filteredSwitches.map(zwitch => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"Switch: \", zwitch.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", zwitch.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 25\n        }, this)]\n      }, zwitch.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }, this)), filteredHosts.map(host => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"Host: \", host.macId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", host.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"IP: \", host.ip]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"System: \", host.system]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Department: \", host.department.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 25\n        }, this)]\n      }, host.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default DeviceList;","map":{"version":3,"names":["React","Component","DeviceList","state","devices","ports","switches","hosts","searchQuery","filteredData","filterBy","selectedEndpoint","showVlanMenu","filterDataByVlan","response","fetch","console","log","data","json","setState","error","filterDataBySwitchId","handleVlanMenuButtonClick","handleChange","e","target","value","updatePortData","updateSwitchData","updateNetworkData","updateHostData","componentDidMount","render","filteredDevices","filter","device","name","includes","filteredPorts","port","vlan","filteredSwitches","zwitch","filteredHosts","host","map","macId","ip","id","location","switchId","portMode","system","department"],"sources":["C:/Users/AuerDa/Desktop/networkPlan/networkPlan_Frontend/src/components/SearchForm.tsx"],"sourcesContent":["import React, {ChangeEvent, Component} from \"react\";\r\n\r\ninterface DeviceListState {\r\n    devices: any[];\r\n    ports: any[];\r\n    switches: any[];\r\n    hosts: any[];\r\n    searchQuery: string;\r\n    filteredData: any[];\r\n    filterBy: string;\r\n    selectedEndpoint: string;\r\n    showVlanMenu: boolean;\r\n}\r\n\r\nclass DeviceList extends Component {\r\n    state: DeviceListState = {\r\n        devices: [],\r\n        ports: [],\r\n        switches: [],\r\n        hosts: [],\r\n        searchQuery: \"\",\r\n        filteredData: [],\r\n        filterBy: \"vlan\",\r\n        selectedEndpoint: \"\",\r\n        showVlanMenu: false,\r\n    };\r\n\r\n    async componentDidMount() {\r\n        if (this.state.selectedEndpoint === 'networks') {\r\n            try {\r\n                const response = await fetch(\"http://localhost:8080/api/network/networks\");\r\n                const data = await response.json();\r\n                this.setState({devices: [], ports: [], switches: [], hosts: [], filteredData: []})\r\n                this.setState({devices: data})\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        if (this.state.selectedEndpoint === 'ports') {\r\n            try {\r\n                const response = await fetch(\"http://localhost:8080/api/network/ports\");\r\n                const data = await response.json();\r\n                console.log(data);\r\n                this.setState({devices: [], ports: [], switches: [], hosts: [], filteredData: []})\r\n                this.setState({ports: data})\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        if (this.state.selectedEndpoint === 'switches') {\r\n            try {\r\n                const response = await fetch(\"http://localhost:8080/api/network/switches\");\r\n                const data = await response.json();\r\n                console.log(data);\r\n                this.setState({devices: [], ports: [], switches: [], hosts: [], filteredData: []}) //y data still there??\r\n                this.setState({switches: data})\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    filterDataByVlan = async () => {\r\n        try {\r\n            const response = await fetch(\r\n                \"http://localhost:8080/api/network/hosts-by-vlan?vlan=\" + this.state.searchQuery\r\n            );\r\n            console.log(this.state.searchQuery)\r\n            const data = await response.json();\r\n            this.setState({devices: [], ports: [], switches: [], hosts: [], filteredData: []});\r\n            this.setState({filteredData: data});\r\n            console.log(data)\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    filterDataBySwitchId = async () => {\r\n        try {\r\n            const response = await fetch(\r\n                \"http://localhost:8080/api/network/hosts-by-switch?switchId=\" + this.state.searchQuery\r\n            );\r\n            console.log(this.state.searchQuery)\r\n            const data = await response.json();\r\n            this.setState({devices: [], ports: [], switches: [], hosts: [], filteredData: []});\r\n            this.setState({filteredData: data});\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleVlanMenuButtonClick = () => {\r\n        this.setState({ showVlanMenu: !this.state.showVlanMenu });\r\n    }\r\n\r\n    /*handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n        this.setState({searchQuery: event.target.value});\r\n    }\r\n\r\n     */\r\n\r\n    handleChange = (e: { target: { value: string; }; }) => {\r\n        if (e.target.value === \"allPorts\") {\r\n            this.updatePortData();\r\n        }\r\n        if (e.target.value === \"allSwitches\") {\r\n            this.updateSwitchData();\r\n        }\r\n        if (e.target.value === \"allDepartments\") {\r\n            this.updateNetworkData();\r\n        }\r\n        if (e.target.value === \"allHosts\") {\r\n            this.updateHostData();\r\n        }\r\n        if (e.target.value === \"hostsByVlan\") {\r\n        }\r\n        if (e.target.value === \"hostBySwitch\") {\r\n        }\r\n    }\r\n\r\n    async updateNetworkData() {\r\n        try {\r\n            const response = await fetch(\"http://localhost:8080/api/network/networks\");\r\n            const data = await response.json();\r\n\r\n            this.setState({devices: data});\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async updatePortData() {\r\n        try {\r\n            const response = await fetch(\"http://localhost:8080/api/network/ports\");\r\n            const data = await response.json();\r\n            this.setState({ports: data});\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async updateSwitchData() {\r\n        try {\r\n            const response = await fetch(\"http://localhost:8080/api/network/switches\");\r\n            const data = await response.json();\r\n            console.log(data);\r\n            this.setState({switches: data});\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async updateHostData() {\r\n        try {\r\n            const response = await fetch(\"http://localhost:8080/api/network/hosts\");\r\n            const data = await response.json();\r\n            console.log(data);\r\n            this.setState({hosts: data});\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const filteredDevices = this.state.devices.filter((device) =>\r\n            device.name.includes(this.state.searchQuery)\r\n        );\r\n        const filteredPorts = this.state.ports.filter((port) =>\r\n            port.vlan.includes(this.state.searchQuery)\r\n        );\r\n        const filteredSwitches = this.state.switches.filter((zwitch) =>\r\n            zwitch.name.includes(this.state.searchQuery)\r\n        );\r\n        const filteredHosts = this.state.hosts.filter((host) =>\r\n            host.name.includes(this.state.searchQuery)\r\n        );\r\n        return (\r\n            <div className=\"App\">\r\n                <h1 className=\"fancy-h1\">Select a search</h1>\r\n                <select onChange={this.handleChange} className=\"fancy-button\">\r\n                    <option value=\"\">Select a search</option>\r\n                    <option value=\"allPorts\">Find all ports</option>\r\n                    <option value=\"allSwitches\">Find all switches</option>\r\n                    <option value=\"allDepartments\">Find all departments</option>\r\n                    <option value=\"allHosts\">Find all hosts</option>\r\n                    <option value=\"hostsByVlan\">Find hosts by VLAN</option>\r\n                    <option value=\"hostBySwitch\">Find hosts by switch ID</option>\r\n                </select>\r\n                <button onClick={() => this.filterDataByVlan()} className=\"fancy-button\">Filter by VLAN</button>\r\n                <button onClick={() => this.filterDataBySwitchId()} className=\"fancy-button\">Filter by Switch ID\r\n                </button>\r\n\r\n                <button\r\n                    onClick={() => this.updateNetworkData()}\r\n                    className=\"fancy-button\"\r\n                >Update Department Data\r\n                </button>\r\n\r\n                <button onClick={() => this.updatePortData()} className=\"fancy-button\">Update Port Data</button>\r\n\r\n                <button onClick={() => this.updateSwitchData()} className=\"fancy-button\">Update Switch Data</button>\r\n\r\n                <button onClick={() => this.updateHostData()} className=\"fancy-button\">Update Host Data</button>\r\n\r\n                {this.state.filteredData.map((data) => (\r\n                    <div key={data.id} className=\"search-table\">\r\n                        <p><strong>Host: {data.macId}</strong></p>\r\n                        <p>Name: {data.name}</p>\r\n                        <p>IP: {data.ip}</p>\r\n                        <p>{this.state.searchQuery}</p>\r\n                        <br/>\r\n                    </div>\r\n                ))}\r\n\r\n                {filteredDevices.map((device) => (\r\n                    <div key={device.id} className=\"search-table\">\r\n                        <p><strong>Department: {device.id}</strong></p>\r\n                        <p>Name: {device.name}</p>\r\n                        <p>Location: {device.location}</p>\r\n                        <br/>\r\n                    </div>\r\n                ))}\r\n                {filteredPorts.map((port) => (\r\n                    <div className=\"search-table\">\r\n                        <br/>\r\n                        <p><strong>Port: {port.name}</strong></p>\r\n                        <p>Switch ID: {port.switchId.name}</p>\r\n                        <p>VLAN: {port.vlan}</p>\r\n                        <p>Mode: {port.portMode}</p>\r\n                        {port.host && (\r\n                            <>\r\n                                <p>Host: {port.host.name}</p>\r\n                            </>\r\n                        )}\r\n                        <br/>\r\n                    </div>\r\n                ))}\r\n                {filteredSwitches.map((zwitch) => (\r\n                    <div key={zwitch.id} className=\"search-table\">\r\n                        <p><strong>Switch: {zwitch.id}</strong></p>\r\n                        <p>Name: {zwitch.name}</p>\r\n                        <br/>\r\n                    </div>\r\n                ))}\r\n                {filteredHosts.map((host) => (\r\n                    <div key={host.id} className=\"search-table\">\r\n                        <p><strong>Host: {host.macId}</strong></p>\r\n                        <p>Name: {host.name}</p>\r\n                        <p>IP: {host.ip}</p>\r\n                        <p>System: {host.system}</p>\r\n                        <p>Department: {host.department.name}</p>\r\n                        <br/>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n                )\r\n    }\r\n}\r\n\r\nexport default DeviceList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}