{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AuerDa\\\\Desktop\\\\networkPlan\\\\networkPlan_Frontend\\\\src\\\\components\\\\SubmitForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [ip, setIp] = useState('');\n  const [mask, setMask] = useState('');\n  const [amount, setAmount] = useState('');\n  const [subnets, setSubnets] = useState([]);\n  const [error, setError] = useState('');\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setError('');\n    await fetch('http://localhost:8080/api/calculator', {\n      method: 'POST',\n      body: JSON.stringify({\n        ip,\n        mask,\n        amount\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(data => {\n      const subnetsArray = Object.entries(data);\n      subnetsArray.sort((a, b) => {\n        const ipA = a[0].split(\".\").map(Number);\n        const ipB = b[0].split(\".\").map(Number);\n        for (let i = 0; i < 4; i++) {\n          if (ipA[i] !== ipB[i]) {\n            return ipA[i] - ipB[i];\n          }\n        }\n        return 0;\n      });\n      setSubnets(subnetsArray);\n    });\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Subnet Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Enter the values\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: ip,\n          onChange: e => setIp(e.target.value),\n          className: \"input-text\",\n          placeholder: \"IP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: mask,\n          onChange: e => setMask(e.target.value),\n          className: \"input-text\",\n          placeholder: \"Mask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: amount,\n          onChange: e => setAmount(e.target.value),\n          className: \"input-text\",\n          placeholder: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"fancy-button\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"IP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Broadcast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: subnets.map((subnet, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: subnet[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: subnet[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"F/w9KZF31nNxgGXF07qiur5T8e0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","ip","setIp","mask","setMask","amount","setAmount","subnets","setSubnets","error","setError","handleSubmit","event","preventDefault","fetch","method","body","JSON","stringify","headers","then","res","json","data","subnetsArray","Object","entries","sort","a","b","ipA","split","map","Number","ipB","i","e","target","value","color","subnet","index"],"sources":["C:/Users/AuerDa/Desktop/networkPlan/networkPlan_Frontend/src/components/SubmitForm.tsx"],"sourcesContent":["import React, { useState, SyntheticEvent } from 'react';\r\n\r\nfunction App() {\r\n    const [ip, setIp] = useState('');\r\n    const [mask, setMask] = useState('');\r\n    const [amount, setAmount] = useState('');\r\n    const [subnets, setSubnets] = useState<[string, string][]>([]);\r\n    const [error, setError] = useState('');\r\n\r\n    async function handleSubmit(event: SyntheticEvent){\r\n        event.preventDefault();\r\n        setError('');\r\n        await fetch('http://localhost:8080/api/calculator', {\r\n            method: 'POST',\r\n            body: JSON.stringify({ ip, mask, amount }),\r\n            headers: { 'Content-Type': 'application/json' },\r\n        })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                const subnetsArray = Object.entries(data) as unknown as [string, unknown][];\r\n                subnetsArray.sort((a, b) => {\r\n                    const ipA = a[0].split(\".\").map(Number);\r\n                    const ipB = b[0].split(\".\").map(Number);\r\n                    for (let i = 0; i < 4; i++) {\r\n                        if (ipA[i] !== ipB[i]) {\r\n                            return ipA[i] - ipB[i];\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n                setSubnets(subnetsArray as [string, string][]);\r\n            });\r\n\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <h1>Subnet Calculator</h1>\r\n            <h2>Enter the values</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>\r\n                    <input\r\n                        type=\"text\"value={ip}\r\n                        onChange={(e) => setIp(e.target.value)}\r\n                        className=\"input-text\"\r\n                        placeholder=\"IP\"\r\n                    />\r\n                </label>\r\n                <br />\r\n                <label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={mask}\r\n                        onChange={(e) => setMask(e.target.value)}\r\n                        className=\"input-text\"\r\n                        placeholder=\"Mask\"\r\n                    />\r\n                </label>\r\n                <br />\r\n                <label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={amount}\r\n                        onChange={(e) => setAmount(e.target.value)}\r\n                        className=\"input-text\"\r\n                        placeholder=\"Amount\"\r\n                    />\r\n                </label>\r\n                <br />\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"fancy-button\"\r\n                >Submit</button>\r\n            </form>\r\n            {error && <div style={{color: \"red\"}}>{error}</div>}\r\n\r\n            \r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>IP</th>\r\n                    <th>Broadcast</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {subnets.map((subnet, index) => (\r\n                    <tr key={index}>\r\n                        <td>{subnet[0]}</td>\r\n                        <td>{subnet[1]}</td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}